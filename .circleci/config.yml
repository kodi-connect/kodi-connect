version: 2.1

jobs:
  test:
    docker:
      - image: node:12.11.1
    steps:
      - checkout

      - restore_cache:
          key: node-modules-{{ checksum "yarn.lock" }}-{{ checksum "package.json" }}

      - run:
          name: Print versions
          command: node --version && yarn --version

      - run:
          name: Install node packages
          command: yarn install

      - save_cache:
          key: node-modules-{{ checksum "yarn.lock" }}-{{ checksum "package.json" }}
          paths:
            - node_modules

      - run:
          name: Install flow typed
          command: yarn flowtyped

      - run:
          name: Run eslint
          command: yarn test:lint

      - run:
          name: Run flow
          command: yarn test:flow

      - run:
          name: Run tests
          command: NODE_ENV=development yarn test:unit

  image:
      docker:
        - image: docker:latest

      steps:
        - setup_remote_docker:
            version: 18.09.3

        - checkout

        - run:
            name: Build image
            command: docker build -t kodiconnect/kodi-connect:${CIRCLE_BRANCH} .

        - run: mkdir -p /tmp/image

        - run:
            name: Save image
            command: docker save kodiconnect/kodi-connect:${CIRCLE_BRANCH} | gzip > /tmp/image/image.tar.gz

        - persist_to_workspace:
            root: /tmp/image
            paths:
              - image.tar.gz

  integration_test:
    machine:
      image: circleci/classic:latest

    steps:
      - checkout

      - run:
          name: Install latest docker-compose
          command: |
            export COMPOSE_URL="https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/docker-compose-latest"
            sudo rm -fr /usr/local/bin/docker-compose
            sudo curl --silent --show-error --location --fail --retry 3 --output /usr/bin/docker-compose $COMPOSE_URL
            sudo chmod +x /usr/bin/docker-compose

      - attach_workspace:
          at: /tmp/image

      - run:
          name: Load image
          command: docker load --input /tmp/image/image.tar.gz

      - run:
          name: Run integration tests
          command: |
            cd tests/integration && \
            IMAGE_NAME=kodiconnect/kodi-connect:${CIRCLE_BRANCH} \
            ADDON_VERSION=0.2.0 \
            ALEXA_VERSION=1.0 \
            docker-compose run --service-ports --rm alexa

  publish:
    docker:
      - image: docker:latest

    steps:
      - setup_remote_docker:
          version: 18.09.3

      - attach_workspace:
          at: /tmp/image

      - run:
          name: Docker login
          command: docker login -u ${DOCKERHUB_USER} -p ${DOCKERHUB_PASS}

      - run:
          name: Load image
          command: docker load --input /tmp/image/image.tar.gz

      - run:
          name: Push image
          command: docker push kodiconnect/kodi-connect:${CIRCLE_BRANCH}

workflows:
  version: 2
  build:
    jobs:
      - test
      - image:
          requires:
            - test
          filters:
            branches:
              ignore:
                - /^dependabot\/.*/
      - integration_test:
          requires:
            - image
      - publish:
          requires:
            - image
            - integration_test

